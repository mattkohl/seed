"""empty message

Revision ID: f11ee6f512b4
Revises: 
Create Date: 2019-06-11 08:12:11.604824

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f11ee6f512b4'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('albums',
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('release_date_string', sa.Text(), nullable=True),
    sa.Column('release_date', sa.DateTime(), nullable=True),
    sa.Column('spot_uri', sa.Text(), nullable=True),
    sa.Column('dbp_uri', sa.Text(), nullable=True),
    sa.Column('mb_id', sa.Text(), nullable=True),
    sa.Column('mb_obj', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('img', sa.Text(), nullable=True),
    sa.Column('thumb', sa.Text(), nullable=True),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_albums_created'), 'albums', ['created'], unique=False)
    op.create_table('artists',
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('spot_uri', sa.Text(), nullable=True),
    sa.Column('dbp_uri', sa.Text(), nullable=True),
    sa.Column('mb_id', sa.Text(), nullable=True),
    sa.Column('mb_obj', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('img', sa.Text(), nullable=True),
    sa.Column('thumb', sa.Text(), nullable=True),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_artists_created'), 'artists', ['created'], unique=False)
    op.create_table('genres',
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dbp_uri', sa.Text(), nullable=True),
    sa.Column('mb_id', sa.Text(), nullable=True),
    sa.Column('mb_obj', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_genres_created'), 'genres', ['created'], unique=False)
    op.create_table('locations',
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('dbp_uri', sa.Text(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_locations_created'), 'locations', ['created'], unique=False)
    op.create_table('album_artist',
    sa.Column('album_id', sa.Integer(), nullable=False),
    sa.Column('artist_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['album_id'], ['albums.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['artist_id'], ['artists.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('album_id', 'artist_id')
    )
    op.create_table('album_genre',
    sa.Column('album_id', sa.Integer(), nullable=False),
    sa.Column('genre_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['album_id'], ['albums.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['genre_id'], ['genres.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('album_id', 'genre_id')
    )
    op.create_table('artist_birthplace',
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('artist_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['artist_id'], ['artists.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('location_id', 'artist_id')
    )
    op.create_table('artist_genre',
    sa.Column('artist_id', sa.Integer(), nullable=False),
    sa.Column('genre_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['artist_id'], ['artists.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['genre_id'], ['genres.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('artist_id', 'genre_id')
    )
    op.create_table('artist_hometown',
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('artist_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['artist_id'], ['artists.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('location_id', 'artist_id')
    )
    op.create_table('tracks',
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('spot_uri', sa.Text(), nullable=True),
    sa.Column('dbp_uri', sa.Text(), nullable=True),
    sa.Column('mb_id', sa.Text(), nullable=True),
    sa.Column('mb_obj', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('album_id', sa.Integer(), nullable=True),
    sa.Column('preview_url', sa.Text(), nullable=True),
    sa.Column('lyrics', sa.Text(), nullable=True),
    sa.Column('lyrics_url', sa.Text(), nullable=True),
    sa.Column('lyrics_annotated', sa.Text(), nullable=True),
    sa.Column('lyrics_annotations_json', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['album_id'], ['albums.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tracks_created'), 'tracks', ['created'], unique=False)
    op.create_table('sections',
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('track_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.Text(), nullable=True),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.Column('artists_raw', sa.Text(), nullable=True),
    sa.Column('text', sa.Text(), nullable=True),
    sa.Column('text_annotated', sa.Text(), nullable=True),
    sa.Column('offset', sa.Integer(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['track_id'], ['tracks.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sections_created'), 'sections', ['created'], unique=False)
    op.create_table('track_featured_artist',
    sa.Column('track_id', sa.Integer(), nullable=False),
    sa.Column('artist_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['artist_id'], ['artists.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['track_id'], ['tracks.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('track_id', 'artist_id')
    )
    op.create_table('track_genre',
    sa.Column('track_id', sa.Integer(), nullable=False),
    sa.Column('genre_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['genre_id'], ['genres.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['track_id'], ['tracks.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('track_id', 'genre_id')
    )
    op.create_table('track_primary_artist',
    sa.Column('track_id', sa.Integer(), nullable=False),
    sa.Column('artist_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['artist_id'], ['artists.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['track_id'], ['tracks.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('track_id', 'artist_id')
    )
    op.create_table('section_artist',
    sa.Column('section_id', sa.Integer(), nullable=False),
    sa.Column('artist_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['artist_id'], ['artists.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['section_id'], ['sections.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('section_id', 'artist_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('section_artist')
    op.drop_table('track_primary_artist')
    op.drop_table('track_genre')
    op.drop_table('track_featured_artist')
    op.drop_index(op.f('ix_sections_created'), table_name='sections')
    op.drop_table('sections')
    op.drop_index(op.f('ix_tracks_created'), table_name='tracks')
    op.drop_table('tracks')
    op.drop_table('artist_hometown')
    op.drop_table('artist_genre')
    op.drop_table('artist_birthplace')
    op.drop_table('album_genre')
    op.drop_table('album_artist')
    op.drop_index(op.f('ix_locations_created'), table_name='locations')
    op.drop_table('locations')
    op.drop_index(op.f('ix_genres_created'), table_name='genres')
    op.drop_table('genres')
    op.drop_index(op.f('ix_artists_created'), table_name='artists')
    op.drop_table('artists')
    op.drop_index(op.f('ix_albums_created'), table_name='albums')
    op.drop_table('albums')
    # ### end Alembic commands ###
